{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","hooks/useBlock.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useApprove","lpContract","dispatch","useDispatch","account","useWallet","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","fetchFarmUserDataAsync","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useSousStake","isUsingBnb","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","pid","txHash","console","info","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","useBlock","BlockContext","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","card","background","isActive","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","href","to","buttonColor","ButtonChild","target","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","getBalanceNumber","memo","YoloSwag0","YoloSwag","PoolFinishedSash","StyledCardActions","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","justifyContent","width","src","height","alt","HarvestButton","UnlockButton","flex","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","QuoteToken","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","mb","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/9.b5a490e9.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n  text-align: center;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\nconst YoloSwag0 = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  div:first-child  {\n    font-size: 16px;\n  }\n\n  div:nth-child(2) {\n    color: #EAE2FC;\n    font-size: 32px;\n    font-weight: 600;\n    line-height: 1;\n    margin-bottom: 12px;\n  }\n`;\n\nconst YoloSwag = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {tokenName} Pool\n        </CardTitle>\n\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\" }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n        </div>\n\n        <YoloSwag0>\n            <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n        </YoloSwag0>\n\n        <YoloSwag>\n          {account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n\n          {sousId === 0 && account && harvest && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n              onClick={onPresentCompound}\n            />\n          )}\n        </YoloSwag>\n\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n\n          {account &&\n            (needsApproval ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={onPresentWithdraw}\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n\n                <StyledActionSpacer />\n\n                <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                  <AddIcon color=\"background\" />\n                </IconButton>\n              </>\n          ))}\n        </StyledCardActions>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SYRUP Pool')}\n          </Heading>\n\n          <div>\n            Stake EGG to earn new tokens. You can unstake at any time. Rewards are calculated per block.\n          </div>\n        </div>\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}